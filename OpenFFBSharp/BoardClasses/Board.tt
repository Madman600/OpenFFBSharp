<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ output extension=".txt" #>
using static OpenFFBoard.Commands;

namespace OpenFFBoard
{
    public abstract class Board
    {
        public bool IsConnected { get; internal set; }
        protected Board()
        {
    <#
	foreach (string classFile in Directory.GetFiles(this.Host.ResolvePath("BoardClasses/csvs")))
	{#>
		<#=Path.GetFileNameWithoutExtension(classFile)#> = new Commands.<#=Path.GetFileNameWithoutExtension(classFile)#>(this);
	<#}#>
    }

    <#
	foreach (string classFile in Directory.GetFiles(this.Host.ResolvePath("BoardClasses/csvs")))
	{#>
    public Commands.<#=Path.GetFileNameWithoutExtension(classFile)#> <#=Path.GetFileNameWithoutExtension(classFile)#> { get; }
	<#}#>


        public abstract void Connect();
        public abstract void Disconnect();
        public abstract Commands.BoardResponse GetBoardData(BoardClass boardClass, byte instance, BoardCommand cmd);
        public abstract Commands.BoardResponse GetBoardData(BoardClass boardClass, byte instance, BoardCommand cmd, ulong address);
        public abstract Commands.BoardResponse GetBoardData(BoardClass boardClass, BoardCommand cmd);
        public abstract Commands.BoardResponse GetBoardData(BoardClass boardClass, BoardCommand cmd, ulong address);
        public abstract Commands.BoardResponse SetBoardData<T>(BoardClass boardClass, byte instance, BoardCommand<T> cmd, T value, ulong address = 0);
    }
}
